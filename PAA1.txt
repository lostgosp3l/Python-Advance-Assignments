Q1. What is the purpose of Python's OOP?
Object Oriented programming (OOP) is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple, reusable pieces of code blueprints (usually called classes), which are used to create individual instances of objects.


Q2. Where does an inheritance search look for an attribute?
Inheritance Searches Namespace Trees:
The whole point of a namespace tool like the class statement is to support name inheritance. In Python, inheritance happens when an object is qualified, and involves searching an attribute definition tree (one or more namespaces). Every time you use an expression of the form object.attribute where object is an instance or class object, Python searches the namespace tree at and above object, for the first attribute it can find. Because lower definitions in the tree override higher ones, inheritance forms the basis of specialization.


Q3. How do you distinguish between a class object and an instance object?
A class is a user-defined blueprint or prototype from which objects are created. Classes provide a means of bundling data and functionality together. Creating a new class creates a new type of object, allowing new instances of that type to be made. Each class instance can have attributes attached to it for maintaining its state. Class instances can also have methods (defined by their class) for modifying their state.



Q4. What makes the first argument in a classâ€™s method function special?
the first argument of every class method, including init, is always a reference to the current instance of the class. By convention, this argument is always named self. In the init method, self refers to the newly created object; in other class methods, it refers to the instance whose method was called.


Q5. What is the purpose of the __init__ method?
The __init__ function is called every time an object is created from a class. The __init__ method lets the class initialize the object's attributes and serves no other purpose. It is only used within classes


Q6. What is the process for creating a class instance?
A Class is like an object constructor, or a "blueprint" for creating objects.
-Create a Class. To create a class, use the keyword class
-Create Object. Now we can use the class name to create objects 
-The self Parameter
-Modify Object Properties. 
-Delete Object Properties. 
-Delete Objects.


Q7. What is the process for creating a class?
A Class is like an object constructor, or a "blueprint" for creating objects.
-Create a Class. To create a class, use the keyword class
-Create Object. Now we can use the class name to create objects 
-The self Parameter
-Modify Object Properties. 
-Delete Object Properties. 
-Delete Objects.


Q8. How would you define the superclasses of a class?
A superclass is the class from which many subclasses can be created. The subclasses inherit the characteristics of a superclass. The superclass is al
